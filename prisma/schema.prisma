// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  HEALTH_TEAM
  EMPLOYEE
}

enum FileType {
  FITNESS_CERTIFICATE
  MEDICAL_RECORD
}

// ← new enum
enum Typology {
  EXPAT
  NATIONAL
  CONTRACTOR
  INTERN
  NATIONAL_SERVICE
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  employeeId    String     @unique
  name          String
  email         String     @unique
  password      String?                // optional now
  department    String
  typology      Typology?               // ← new
  pin           String
  role          Role       @default(EMPLOYEE)
  fitnessDoc    Document?  @relation("FitnessDocument", fields: [fitnessDocId], references: [id])
  fitnessDocId  String?    @db.ObjectId
  medicalDoc    Document?  @relation("MedicalDocument", fields: [medicalDocId], references: [id])
  medicalDocId  String?    @db.ObjectId
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Document {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  filename     String
  originalName String
  fileType     FileType
  mimeType     String
  fileData     String? 
  size         Int
  uploadedBy   String
  uploadDate   DateTime   @default(now())
  expiryDate   DateTime?
  userFitness  User[]     @relation("FitnessDocument")
  userMedical  User[]     @relation("MedicalDocument")
}
